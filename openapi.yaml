openapi: 3.1.0
info:
  title: Generic Service
  version: 1.0.0
  description: |
    Template for writing microservices
paths:
  /users:
    get:
      operationId: usersGet
      tags:
        - Users
      summary: Get the list of all users
      parameters:
        - name: q
          in: query
          required: false
          description: Search for users
          schema:
            type: string
            nullable: true
        - name: count
          in: query
          required: false
          schema:
            type: number
            default: 20
            minimum: 1
        - name: page
          in: query
          schema:
            type: number 
            default: 1
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - users
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/user-model'
      security:
        - user:
            - USER_CREATE
components:
  schemas:
    user-create:
      type: object
      required:
        - name
        - age
      properties:
        name:
          type: string
          description: Name of the user
          example: PP
        age:
          type: number
          description: Age of user
          minimum: 0
          maximum: 150
    user-model:
      type: object
      additionalProperties: false
      allOf:
        - type: object
          required:
            - id
            - createdAt
            - role
            - first_name
            - details
          properties:
            id:
              type: number
            createdAt:
              $ref: '#/components/schemas/timestamp'
            role:
              type: string
              description: Users Role
              enum:
                - Student
                - Staff
            first_name:
              maxLength: 50
              minLength: 1
              type: string
              description: Users First Name
            last_name:
              maxLength: 50
              minLength: 1
              type: string
              description: Users Last Name
            other_name:
              maxLength: 150
              minLength: 1
              type: string
              description: Users Other Name
            profile_image:
              type: string
              description: Users Passport photo
            email:
              type: string
              format: email
            user_id:
              type: number
              description: Users assigned Id
              maxLength: 8
              minLength: 8
            password:
              type: number
              description: Student's Passcode
              maxLength: 5
              minLength: 5
            gender:
              type: string
              enum:
                - male
                - female
                - other
            phone: 
              type: string
            
        - $ref: '#/components/schemas/user-create'
    timestamp:
      type: string
      format: 'date-time'
      description: 'An ISO formatted timestamp'
  securitySchemes:
    user:
      type: oauth2
      flows:
        password:
          tokenUrl: 'https://api-auth.user.tech/oauth2/token'
          scopes:
            USER_READ: Read trackings
            USER_CREATE: Create a tracking
            USER_UPDATE: Update a tracking
            USER_DELETE: Delete a tracking
